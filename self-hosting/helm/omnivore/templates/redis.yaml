{{- if .Values.redis.enabled -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "omnivore.fullname" . }}-redis
  labels:
    {{- include "omnivore.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omnivore.fullname" . }}-redis
  labels:
    {{- include "omnivore.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "omnivore.selectorLabels" . | nindent 6 }}
      component: redis
  template:
    metadata:
      labels:
        {{- include "omnivore.selectorLabels" . | nindent 8 }}
        component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources.redis | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "omnivore.fullname" . }}-redis
---
{{- if not (lookup "v1" "Service" .Release.Namespace (printf "%s-redis" (include "omnivore.fullname" .))) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "omnivore.fullname" . }}-redis
  labels:
    {{- include "omnivore.labels" . | nindent 4 }}
spec:
  type: {{ .Values.redis.service.type }}
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "omnivore.selectorLabels" . | nindent 4 }}
    component: redis
{{- end }}
{{- end }} 